name: CI Pipeline

on:
  pull_request:
    branches: [main, develop]
  # Remove push triggers for protected branches - only allow through PRs
  # push:
  #   branches: [main, develop]

jobs:
  # Stage 1: Install Dependencies
  install-dependencies:
    name: 📦 Install Dependencies
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📂 Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: ✅ Dependencies installed successfully
        run: |
          echo "✅ Dependencies installation completed"
          echo "📊 Node.js version: $(node --version)"
          echo "📊 npm version: $(npm --version)"
          echo "📂 node_modules cached for subsequent jobs"

  # Stage 2: Linting
  linting:
    name: 🔍 Code Linting
    runs-on: ubuntu-latest
    needs: install-dependencies

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📂 Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: 📦 Install dependencies (if cache miss)
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint
      - name: ✅ Linting completed successfully
        run: |
          echo "✅ linting checks passed!"

  # Stage 3: Testing
  testing:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: install-dependencies

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📂 Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: 📦 Install dependencies (if cache miss)
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test:run

      - name: ✅ Testing completed successfully
        run: |
          echo "✅ All tests passed!"

  # Summary Job
  ci-summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [install-dependencies, linting, testing]
    if: always()

    steps:
      - name: 📋 Generate CI Summary
        run: |
          echo "## 🏎️ F1 World Champions CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Stage Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 📦 Dependencies | ${{ needs.install-dependencies.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Linting | ${{ needs.linting.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Testing | ${{ needs.testing.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏁 Overall Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.install-dependencies.result }}" == "success" && "${{ needs.linting.result }}" == "success" && "${{ needs.testing.result }}" == "success" ]]; then
            echo "🏆 **All stages completed successfully! Ready for merge!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some stages failed. Please review and fix issues.**" >> $GITHUB_STEP_SUMMARY
          fi
