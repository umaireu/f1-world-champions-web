name: CI Pipeline

on:
  # Run on Pull Requests (for pre-merge validation)
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

  # Run on Push to main/develop (for post-merge validation)
  push:
    branches: [main, develop]

jobs:
  # Stage 1: Install Dependencies
  install-dependencies:
    name: 📦 Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup
        uses: ./.github/actions/setup

  # Stage 2: Linting
  linting:
    name: 🔍 Linting
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup
        uses: ./.github/actions/setup

      - name: 🔍 Run ESLint
        run: npm run lint

  # Stage 3: Testing
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup
        uses: ./.github/actions/setup

      - name: 🧪 Run tests
        run: npm run test:run

  # Stage 4: Security
  security:
    name: Security (${{ matrix.language }})
    needs: [linting, test, install-dependencies]
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
          - language: javascript-typescript
            build-mode: none
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:${{matrix.language}}'
  # Stage 5: Build
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [linting, test]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup
        uses: ./.github/actions/setup

      - name: 🏗️ Build application
        run: npm run build

  # Summary Job
  ci-summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [install-dependencies, linting, test, build]
    if: always()

    steps:
      - name: 📋 Generate CI Summary
        run: |
          # Determine if this is the default/primary branch
          DEFAULT_BRANCH="${{ github.event.repository.default_branch }}"
          CURRENT_BRANCH="${{ github.ref_name }}"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "## 🏎️ F1 World Champions PR Validation Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Pull Request:** #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
            echo "**Target Branch:** ${{ github.base_ref }}" >> $GITHUB_STEP_SUMMARY
            if [[ "${{ github.base_ref }}" == "$DEFAULT_BRANCH" ]]; then
              echo "**Type:** Merging to default branch 🎯" >> $GITHUB_STEP_SUMMARY
            else
              echo "**Type:** Merging to feature branch 🔀" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "## 🏎️ F1 World Champions Post-Merge Validation" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
            if [[ "$CURRENT_BRANCH" == "$DEFAULT_BRANCH" ]]; then
              echo "**Type:** Default branch validation 🎯" >> $GITHUB_STEP_SUMMARY
            else
              echo "**Type:** Feature branch validation 🔀" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Stage Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 📦 Dependencies | ${{ needs.install-dependencies.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Linting | ${{ needs.linting.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Testing | ${{ needs.test.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Build | ${{ needs.build.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏁 Overall Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.install-dependencies.result }}" == "success" && "${{ needs.linting.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "🏆 **All checks passed! PR is ready for merge into ${{ github.base_ref }}!**" >> $GITHUB_STEP_SUMMARY
            else
              echo "🏆 **Post-merge validation successful! Branch ${{ github.ref_name }} is healthy!**" >> $GITHUB_STEP_SUMMARY
            fi
          else
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "⚠️ **Some checks failed. Please fix issues before merging into ${{ github.base_ref }}.**" >> $GITHUB_STEP_SUMMARY
            else
              echo "⚠️ **Post-merge validation failed! Branch ${{ github.ref_name }} needs attention!**" >> $GITHUB_STEP_SUMMARY
            fi
          fi
