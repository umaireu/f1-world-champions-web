name: CI Pipeline

permissions:
  contents: read
  security-events: write
  pull-requests: write

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]

jobs:
  # Stage 1: Install Dependencies
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and install dependencies
        uses: ./.github/actions/setup-node-dependencies

  # Stage 2: Linting
  linting:
    name: Linting
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: setup-node-dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Run ESLint
        run: npm run lint

  # Stage 3: Testing
  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: setup-node-dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Run tests with coverage
        run: npm run test:coverage

  # Stage 4: Security
  security:
    name: Security
    runs-on: ubuntu-latest
    needs: [install-dependencies, linting, test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Security Analysis
        uses: ./.github/actions/security

  # Stage 5: Build
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [install-dependencies, linting, test, security]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: setup-node-dependencies
        uses: ./.github/actions/setup-node-dependencies

      - name: Build application
        run: npm run build

  # Stage 6: Summary
  pipeline-summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [install-dependencies, linting, test, security, build]
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate CI Summary
        uses: ./.github/actions/pipeline-summary
        with:
          install-dependencies-result: ${{ needs.install-dependencies.result }}
          linting-result: ${{ needs.linting.result }}
          test-result: ${{ needs.test.result }}
          security-result: ${{ needs.security.result }}
          build-result: ${{ needs.build.result }}
          github-event-name: ${{ github.event_name }}
          github-event-number: ${{ github.event.number }}
          github-base-ref: ${{ github.base_ref }}
          github-ref-name: ${{ github.ref_name }}
          default-branch: ${{ github.event.repository.default_branch }}
